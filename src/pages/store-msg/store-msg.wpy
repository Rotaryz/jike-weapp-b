<template>
  <view class="store-msg">
    <view class="store-msg-head">
      <view class="store-msg-txt">
        <view class="store-msg-txt-left">
          <label for="storeName" class="store-msg-txt-left-title">门店名称</label>
          <input type="text" id="storeName" maxlength="15" class="store-msg-txt-left-input" value="{{name}}" placeholder="请输入" placeholder-class="placeholderTxt" bindinput="txtChange" />
        </view>
        <view class="wordNum">{{name.length}}/15</view>
      </view>

      <view class="store-msg-txt">
        <view class="store-msg-txt-left">
          <label for="storeDescription" class="store-msg-txt-left-title">门店描述</label>
          <input type="text" id="storeDescription" maxlength="10" value="{{description}}" class="store-msg-txt-left-input" placeholder="请输入" placeholder-class="placeholderTxt" bindinput="txtChange" />
        </view>
        <view class="wordNum">{{description.length}}/10</view>
      </view>

      <view class="store-msg-txt">
        <view class="store-msg-txt-left">
          <label for="storeTel" class="store-msg-txt-left-title">联系电话</label>
          <input type="number" id="storeTel" value="{{tel}}" maxlength="16" class="store-msg-txt-left-input {{telTest?'':'error'}}" placeholder="请输入" placeholder-class="placeholderTxt" bindinput="txtChange" />
        </view>
      </view>

      <view class="store-msg-picker">
        <view class="store-msg-picker-title">行业类型</view>
        <view class="store-msg-picker-right" @tap="industryChiose">
          <view class="store-msg-picker-txt">{{industryName}}</view>
          <image class="store-msg-picker-arrow" wx:if="{{imageUrlHead}}" src="{{imageUrlHead + '/defaults/b-image/page/Rectangle @2x.png'}}"></image>
        </view>
      </view>
    </view>

    <view class="store-msg-body">
      <view class="store-msg-picker">
        <view class="store-msg-picker-title">地区</view>
        <picker mode="region" bindchange="bindRegionChange" disabled="{{disableFlag}}" value="{{region}}" class="sitebox">
          <view class="store-msg-picker-right">
            <view class="{{disableFlag ? 'store-msg-picker-txt-dis':'store-msg-picker-txt'}}">{{region[2] ? region[2] : ''}}</view>
            <image class="store-msg-picker-arrow" wx:if="{{!disableFlag && imageUrlHead}}" src="{{imageUrlHead + '/defaults/b-image/page/Rectangle @2x.png'}}"></image>
          </view>
        </picker>
      </view>

      <view class="store-msg-picker">
        <view class="areaCover" @tap.stop="testRegion" wx:if="{{!region[2]}}"></view>
        <view class="store-msg-picker-title">商圈</view>
        <picker bindchange="areaChange" disabled="{{disableFlag}}" value="{{index}}" range="{{areaArr}}" range-key="name">
          <view class="store-msg-picker-right">
            <view class="{{disableFlag ? 'store-msg-picker-txt-dis':'store-msg-picker-txt'}}">{{area}}</view>
            <image class="store-msg-picker-arrow" wx:if="{{!disableFlag && imageUrlHead}}" src="{{imageUrlHead + '/defaults/b-image/page/Rectangle @2x.png'}}"></image>
          </view>
        </picker>
      </view>

      <view class="store-msg-address-box">
        <view class="store-msg-txt-left">
          <label class="store-msg-txt-left-title">门店地址</label>
          <view class="store-msg-txt-left-input">
            <textarea cols="30" id="storeSite" rows="3" placeholder="点击右侧图标快捷设置" bindinput="txtChange" bindblur="hideTextarea" value="{{site}}" focus="{{textareaFocus}}" class="store-textarea {{textareaShow ? '' : 'textarea-hide'}}" max-length="60" auto-height placeholder-class="placeholderTxt" disabled="{{!textareaSwitch}}"></textarea>
            <view class="textarea-showTxt {{site ? '' : 'gray'}}" @tap="checkTextarea" wx:if="{{!textareaShow}}">{{site ? site :'点击右侧图标快捷设置'}}</view>
          </view>
          <!--<input type="text" id="storeSite" class="store-msg-txt-left-input" value="{{site}}" placeholder="点击右侧图标快捷设置" placeholder-class="placeholderTxt" bindchange="txtChange" />-->
        </view>
        <view class="store-msg-txt-right" @tap.stop="chioceAddress">
          <image class="store-msg-address-icon" wx:if="{{imageUrlHead}}" src="{{imageUrlHead + '/defaults/b-image/mine/icon-address-new@2x.png'}}"></image>
        </view>
      </view>

      <!--<view class="storeMap">-->
        <!--<view class="store-msg-txt-left">-->
          <!--<view class="store-msg-txt-left-title">门店地图</view>-->
          <!--<view class="store-msg-txt-show">{{mapAddress}}</view>-->
        <!--</view>-->
      <!--</view>-->

      <!--<view class="store-msg-map">-->
        <!--<view class="map-box {{showMap?'':'hide'}}">-->
          <!--<map id="myMap" wx:if="{{showMap}}" scale="16" bindregionchange="getCenter" longitude="{{longitude}}" latitude="{{latitude}}" show-location style="width: 100%; height: 100%;">-->
            <!--<cover-view class="mapIcon">-->
              <!--<cover-image src="./icon-site-msg.png" class="mapIcon-img"></cover-image>-->
            <!--</cover-view>-->
          <!--</map>-->
        <!--</view>-->
      <!--</view>-->
    </view>

    <view class="store-msg-foot">
      <view class="store-msg-picker">
        <view class="store-msg-picker-title">营业状态</view>
        <view class="store-msg-picker-right" @tap="showRadio">
          <view class="store-msg-picker-txt">{{storeStatusTxt}}</view>
          <image class="store-msg-picker-arrow" wx:if="{{imageUrlHead}}" src="{{imageUrlHead + '/defaults/b-image/page/Rectangle @2x.png'}}"></image>
        </view>
      </view>

      <view class="time-picker">
        <view class="prize-picker-title">每日营业时间</view>
        <view class="prize-picker-right">
          <view class="prize-picker-txt">
            <view class="prize-picker-txt-time">
              <picker mode="time" value="{{hourBegin}}" start="00:00" end="{{hourEnd}}" bindchange="hourBeginChange">
                <view class="prize-picker-txt-time-title">{{hourBegin?hourBegin:'开始时间'}}</view>
              </picker>
              <image class="prize-picker-arrow" wx:if="{{imageUrlHead}}" src="{{imageUrlHead + '/defaults/b-image/page/Rectangle @2x.png'}}"></image>
            </view>
            <view class="prize-picker-txt-middle">至</view>
            <view class="prize-picker-txt-time">
              <picker mode="time" value="{{hourEnd}}" start="{{hourBegin}}" end="23:59" bindchange="hourEndChange">
                <view class="prize-picker-txt-time-title">{{hourEnd?hourEnd:'结束时间'}}</view>
              </picker>
              <image class="prize-picker-arrow" wx:if="{{imageUrlHead}}" src="{{imageUrlHead + '/defaults/b-image/page/Rectangle @2x.png'}}"></image>
            </view>
          </view>
        </view>
      </view>

      <view class="time-picker">
        <view class="prize-picker-title">每周营业时间</view>
        <view class="prize-picker-right-dotted" @tap="showTimeCover">
          <view class="prize-picker-txt">{{weekShowTxt}}</view>
          <image class="store-msg-picker-arrow" wx:if="{{imageUrlHead}}" src="{{imageUrlHead + '/defaults/b-image/page/Rectangle @2x.png'}}"></image>
        </view>
      </view>

      <view class="store-msg-logo">
        <view class="store-msg-logo-title">门店logo</view>
        <view class="store-msg-logo-right">
          <view class="store-msg-logo-box">
            <view class="store-msg-logo-imgBox">
              <image src="{{imageUrlHead + '/defaults/b-image/page/icon-add@2x.png'}}" class="store-msg-logo-img" @tap="uploadlogo" wx:if="{{!logoUrl && imageUrlHead}}"></image>
              <image src="{{logoUrl}}" mode="aspectFill" class="store-msg-logo-imgupdate" wx:if="{{logoUrl}}" @tap.stop="showLogoDetail({{logoUrl}},1,200)"></image>
              <image src="{{imageUrlHead + '/defaults/b-image/page/icon-del24@2x.png'}}" class="store-msg-logo-cancle" wx:if="{{logoUrl && imageUrlHead}}" @tap="dellogo"></image>
            </view>
          </view>
          <view class="store-msg-logo-txt">点击图片预览实际展示效果</view>
          <view class="store-msg-logo-txt">建议上传宽200px,高200px,2M以下的图片</view>
        </view>
      </view>

      <view class="store-msg-logo">
        <view class="store-msg-logo-title">门店图片</view>
        <view class="store-msg-logo-right">
          <view class="store-msg-logo-box">
            <view class="store-msg-logo-imgBox" wx:for="{{storeImgs}}" wx:key="{{item}}">
              <image src="{{imageUrlHead + '/defaults/b-image/page/icon-add@2x.png'}}" class="store-msg-logo-img" wx:if="{{!item.image_url && imageUrlHead}}" @tap="uploadStoreImg({{index}})"></image>
              <image src="{{item.image_url}}" mode="aspectFill" class="store-msg-logo-imgupdate" wx:if="{{item.image_url}}" @tap.stop="showPicDetail({{item.image_url}},{{300/650}})"></image>
              <image src="{{imageUrlHead + '/defaults/b-image/page/icon-del24@2x.png'}}" class="store-msg-logo-cancle" wx:if="{{item.image_url && imageUrlHead}}" @tap="delStoreImg({{index}})"></image>
            </view>
          </view>
          <view class="store-msg-logo-txt">点击图片预览实际展示效果</view>
          <view class="store-msg-logo-txt">建议上传宽650px,高300px,2M以下的图片</view>
        </view>
      </view>

      <view class="store-msg-logo">
        <view class="store-msg-logo-title">客服二维码</view>
        <view class="store-msg-logo-right">
          <view class="store-msg-logo-box">
            <view class="store-msg-logo-imgBox" wx:for="{{serviceCode}}" wx:key="{{item}}">
              <image src="{{imageUrlHead + '/defaults/b-image/page/icon-add@2x.png'}}" class="store-msg-logo-img" wx:if="{{!item.image_url && imageUrlHead}}" @tap="uploadServiceCode({{index}})"></image>
              <image src="{{item.image_url}}" mode="aspectFill" class="store-msg-logo-imgupdate" wx:if="{{item.image_url}}" @tap.stop="showSerDetail({{item.image_url}},{{300/650}})"></image>
              <image src="{{imageUrlHead + '/defaults/b-image/page/icon-del24@2x.png'}}" class="store-msg-logo-cancle" wx:if="{{item.image_url && imageUrlHead}}" @tap="delServiceCode({{index}})"></image>
            </view>
          </view>
          <view class="store-msg-logo-txt">建议个人微信号</view>
        </view>
      </view>
    </view>
    <view class="store-msgBtn">
      <view @tap="storeMsgSubmit">提交</view>
    </view>

    <view class="store-timeCover" wx:if="{{timeCover}}">
      <view class="store-time-center">
        <view class="store-time-title">每周营业时间</view>
        <view class="store-time-box">
          <view class="store-week-list">
            <checkbox-group @change="weekChange">
              <view class="radioBox-list-item" wx:for="{{weekValue}}" wx:key="{{item}}">
                <label class="radioLabel {{item.checked?'active':''}}">
                  <checkbox value="{{item.value}}" checked="{{item.checked}}" hidden="true" />{{item.txt}}
                  <image wx:if="{{imageUrlHead}}" class="radio-Icon" src="{{imageUrlHead + (item.checked?'/defaults/b-image/page/icon-select@2x.png':'/defaults/b-image/page/icon-checkbox@2x.png')}}"></image>
                </label>
              </view>
            </checkbox-group>
          </view>
        </view>
        <view class="foot-btnBox border-top-1px">
          <view class="prizeItem-saveBtn border-right-1px firstBtn" @tap="cancleMsg">取消</view>
          <view class="prizeItem-saveBtn" @tap="saveMsg">确定</view>
        </view>
      </view>
    </view>

    <Toast></Toast>
    <Picture></Picture>

    <view wx:if="{{radioboxShow}}">
      <RadioBox></RadioBox>
    </view>
    <view wx:if="{{twoRadioboxShow}}">
      <TwoRadioBox></TwoRadioBox>
    </view>
  </view>
</template>

<script>
  /* eslint-disable no-undef */
  import wepy from 'wepy'
  import base from '@/common/mixins/base'
  import RadioBox from '@/base/radio/radio'
  import TwoRadioBox from '@/base/second-radio/second-radio'
//  import QQMapWX from '@/common/libs/qqmap-wx-jssdk'
  import Store from '@/api/store'
  import Toast from '@/base/cover-toast/cover-toast'
  import users from '@/common/mixins/users'
  import Upload from '@/api/uploads'
  import Tips from '@/common/js/tips'
  import URIS from 'common/js/config'
  import {ERR_OK} from '@/api/base'
  import Picture from '@/base/picture-detail/picture-detail'
  import {TELREG, PLANEREG} from '@/common/js/regs'

  export default class StoreMsg extends wepy.page {
    mixins = [base, users]

    config = {
      navigationBarTitleText: '门店基础信息',
      navigationBarBackgroundColor: '#fff',
      navigationBarTextStyle: 'black',
      backgroundColor: '#F9F9F9'
    }

    components = {
      RadioBox,
      TwoRadioBox,
      Toast,
      Picture
    }

    data = {
      imageUrlHead: URIS.image,
      Induring: '',
      showMap: true,
      name: '',
      description: '',
      industryName: '',
      industry: '',
      hasIndustry: '',
      industryId: '',
      tel: '',
      site: '',
//      mapAddress: '',
      storeStatus: '',
      storeStatusTxt: '',
      longitude: '',
      latitude: '',
//      movelongitude: 0,
//      movelatitude: 0,
      area: '',
      areaId: '',
      areaArr: [],
      region: ['', '', ''],
      mapCtx: '',
      timeCover: false,
      hourBegin: '',
      hourEnd: '',
      weekValue: [
        {value: '0', txt: '周一', checked: false},
        {value: '1', txt: '周二', checked: false},
        {value: '2', txt: '周三', checked: false},
        {value: '3', txt: '周四', checked: false},
        {value: '4', txt: '周五', checked: false},
        {value: '5', txt: '周六', checked: false},
        {value: '6', txt: '周日', checked: false}
      ],
      weekChecked: [],
      temporaryWeekChecked: [],
      radioboxShow: false,
      twoRadioboxShow: false,
      twocolumnboxShow: false,
      logoUrl: '',
      logoId: 0,
      storeImgs: [],
      serviceCode: [],
      disableFlag: false,
      textareaShow: false,
      textareaFocus: false
    }

    async onLoad() {
      await this.load()
    }

    async load() {
//      this.qqmapsdk = new QQMapWX({
//        key: 'V6VBZ-5MB6S-JOKOW-6B724-OCXOF-3OFG2'
//      })
      let Json = await Store.getMsgList()
      if (Json.error !== ERR_OK) {
        this.loaded()
        return
      }
      let res = Json.data
      this.Induring = res
      this.name = res.shop_name ? res.shop_name : ''
      this.industry = res.industry ? res.industry : ''
      this.hasIndustry = res.industry ? res.industry : ''
      this.industryId = res.industry_id ? res.industry_id : ''
      this.industryName = res.industry ? res.industry.name : ''
      this.description = res.describe ? res.describe : ''
      this.tel = res.mobile ? res.mobile : ''
      this.site = res.address ? res.address : ''
      this.region = res.business_circle ? [res.business_circle.province, res.business_circle.city, res.business_circle.district] : ['', '', '']
      this.latitude = res.latitude ? res.latitude : ''
      this.longitude = res.longitude ? res.longitude : ''
      this.movelongitude = this.longitude
      this.movelatitude = this.latitude
      this.area = res.business_circle ? res.business_circle.name : ''
      this.areaId = res.business_circle_id ? res.business_circle_id : ''
      this.storeStatus = res.open_status ? res.open_status : 1
      this.logoUrl = res.logo_image || ''
      this.logoId = res.logo_image_id || 0
      this.storeImgs = res.shop_image_data && res.shop_image_data.length > 0 ? res.shop_image_data.slice() : [
        {id: 0, image_id: 0, image_url: ''},
        {id: 0, image_id: 0, image_url: ''},
        {id: 0, image_id: 0, image_url: ''}
      ]

      this.serviceCode = [{id: 0, image_id: res.qrcode_id, image_url: res.qrcode_image}]
      let arr = ['暂停营业', '营业中', '筹建中', '已关闭']
      this.storeStatusTxt = arr[this.storeStatus]
      if (res.business_circle) {
        let Json1 = await Store.getArea(res.business_circle.district)
        this.loaded()
        if (Json1.error === ERR_OK) {
          this.areaArr = res.business_circle ? Json1.data : []
        }
      } else {
        this.areaArr = []
      }
      this.weekChecked = res.week_day || ['0', '1', '2', '3', '4', '5']
      this.temporaryWeekChecked = this.weekChecked
      this._choiseChecked(this.weekValue)
      this.hourBegin = res.open_time ? res.open_time : '9:00'
      this.hourEnd = res.close_time ? res.close_time : '21:00'
      if (res.is_leader === 1) {
        this.disableFlag = res.business_circle ? !this.disableFlag : this.disableFlag
      }
//      this._initMapAddress()
      this.$apply()
      this.loaded()
    }

    onReady() {
//      this.mapCtx = wx.createMapContext('myMap')
      this.$apply()
    }

    // 初始化地图
//    _initMapAddress() {
//      this.qqmapsdk.reverseGeocoder({
//        location: {
//          latitude: this.latitude,
//          longitude: this.longitude
//        },
//        success: (resData) => {
//          this.mapAddress = resData.result.address
//          this.movelongitude = this.longitude
//          this.movelatitude = this.latitude
//          this.$apply()
//        }
//      })
//    }

    methods = {
      showNull() {

      },
      testRegion() {
        this.$invoke('Toast', 'show', '请先选择地区')
      },
      industryChiose() {
        this.twoRadioboxShow = true
        this.showMap = false
        let radioChecked
        if (this.industryId) {
          radioChecked = {
            two: this.industry.id,
            one: this.industry.parent_id
          }
        } else {
          radioChecked = {
            two: '',
            one: 1
          }
        }
        let listArr
        if (this.hasIndustry) {
          listArr = this.Induring.industries.filter((item) => {
            return item.id === this.industry.parent_id
          })
        } else {
          listArr = this.Induring.industries
        }
        let listMsg = {
          headTxt: '行业类型',
          radioChecked,
          oneTitle: 'industries',
          twoTitle: 'industry',
          industries: listArr
        }
        this.$invoke('TwoRadioBox', 'init', listMsg)
      },
      areaChange(e) {
        let item = this.areaArr[e.detail.value]
        this.areaId = item.id
        this.area = item.name
        this.$apply()
      },
      showRadio() {
        this.radioboxShow = true
        this.showMap = false
        this.$invoke('RadioBox', 'init', {
          headTxt: '营业状态',
          radioChecked: this.storeStatusTxt,
          items: [
            {value: '0', txt: '暂停营业'},
            {value: '1', txt: '营业中'},
            {value: '2', txt: '筹建中'},
            {value: '3', txt: '已关闭'}]
        })
        this.$apply()
      },
      txtChange(e) {
        let eventId = e.target.id
        switch (eventId) {
          case 'storeTel':
            this.tel = e.detail.value
            break
          case 'storeName':
            this.name = e.detail.value
            break
          case 'storeDescription':
            this.description = e.detail.value
            break
          case 'storeSite':
//            let mapAddress = this.region[0] + this.region[1] + this.region[2] + e.detail.value
            this.site = e.detail.value
//            this._mapAuto(mapAddress)
            break
        }
        this.$apply()
      },
      async bindRegionChange(e) {
        this.region = e.detail.value
//        this.mapAddress = this.region[0] + this.region[1] + this.region[2]
//        this._mapAuto(this.mapAddress)
        let Json = await Store.getArea(this.region[2])
        if (Json.error !== ERR_OK) {
          this.loaded()
          this.$invoke('Toast', 'show', Json.message)
          return
        }
        this.areaArr = Json.data
        this.loaded()
//        this.showMap = true
        this.$apply()
      },
//      getCenter(e) {
//        if (e.type === 'end') {
//          let self = this
//          this.mapCtx.getCenterLocation({
//            success: (res) => {
//              self.qqmapsdk.reverseGeocoder({
//                location: {
//                  latitude: res.latitude,
//                  longitude: res.longitude
//                },
//                success: (resData) => {
//                  self.mapAddress = resData.result.address
//                  self.movelongitude = res.longitude
//                  self.movelatitude = res.latitude
//                  self.$apply()
//                }
//              })
//            }
//          })
//        }
//      },
      hourBeginChange(e) {
        this.hourBegin = e.detail.value
        this.$apply()
      },
      hourEndChange(e) {
        this.hourEnd = e.detail.value
        this.$apply()
      },
      cancleMsg() {
        this.temporaryWeekChecked = this.weekChecked
        this._choiseChecked(this.weekValue)
        this.timeCover = false
        this.showMap = true
        this.$apply()
      },
      saveMsg() {
        if (this.temporaryWeekChecked.length === 0) {
          this.$invoke('Toast', 'show', '请至少选择一天营业时间')
          return
        }
        this.weekChecked = this.temporaryWeekChecked
        this.timeCover = false
        this.showMap = true
        this.$apply()
      },
      weekChange(e) {
        this.temporaryWeekChecked = e.detail.value
        this._choiseChecked(this.weekValue)
        this.$apply()
      },
      closeTimeCover() {
        this.timeCover = false
        this.showMap = true
        this.$apply()
      },
      showTimeCover() {
        this.timeCover = true
        this.showMap = false
        this.$apply()
      },
      async storeMsgSubmit() {
//        let longitude = this.movelongitude
//        let latitude = this.movelatitude
        let testArr = [
          {value: this.name, txt: '请输入门店名称'},
          {value: this.description, txt: '请输入门店描述'},
          {value: this.telTest, txt: '请输入正确联系电话'},
          {value: this.telLengthTest, txt: '请输入正确联系电话'},
          {value: this.industry.id, txt: '请选择行业'},
          {value: this.region[2], txt: '请选择地区'},
          {value: this.areaId, txt: '请选择商圈'},
          {value: this.site, txt: '请输入门店地址'},
          {value: this.storeStatusTxt, txt: '请选择营业状态'},
          {value: this.hourBegin, txt: '请设置每日营业时间'},
          {value: this.hourEnd, txt: '请设置每日营业时间'},
          {value: this.weekChecked.length, txt: '请设置每周营业时间'},
          {value: this.logoUrl, txt: '请上传门店logo'},
          {value: this.storeImgTest, txt: '请上传门店图片'}
        ]
        let res = this._testPropety(testArr)
        if (res) {
          let data = {
            shop_name: this.name,
            describe: this.description,
            mobile: this.tel,
            industry_id: this.industry.id,
            business_circle_id: this.areaId,
            address: this.site,
            open_status: this.storeStatus,
            open_time: this.hourBegin,
            close_time: this.hourEnd,
            week_day: this.weekChecked,
            longitude: this.longitude,
            latitude: this.latitude,
            logo_image_id: this.logoId,
            shop_images: this.storeImgs,
            qrcode_id: this.serviceCode[0].image_id,
            particular_address: this.site
          }
          let upRes = await Store.setStoreMsg(data)
          this.loaded()
          if (upRes.error === ERR_OK) {
            Tips.success('保存成功')
            setTimeout(() => {
              this.$back(1)
            }, 1000)
          } else {
            this.$invoke('Toast', 'show', upRes.message)
          }
        }
      },
      async uploadlogo() {
        let res = await wepy.chooseImage({sizeType: ['compressed']})
        if (!res) {
          return
        }
        let upRes = await Upload.uploadImages(res.tempFilePaths[0])
        this.loaded()
        this.logoUrl = upRes.url
        this.logoId = upRes.id
        this.$apply()
      },
      dellogo() {
        this.logoUrl = ''
        this.logoId = ''
        this.$apply()
      },
      async uploadStoreImg(idx) {
        let res = await wepy.chooseImage({sizeType: ['compressed']})
        if (!res) {
          return
        }
        let upRes = await Upload.uploadImages(res.tempFilePaths[0])
        this.storeImgs[idx] = Object.assign(this.storeImgs[idx], {image_id: upRes.id, image_url: upRes.url})
        this.loaded()
        this.$apply()
      },
      delStoreImg(idx) {
        this.storeImgs[idx] = Object.assign(this.storeImgs[idx], {image_id: 0, image_url: ''})
        this.$apply()
      },
      async uploadServiceCode(idx) {
        let res = await wepy.chooseImage({sizeType: ['compressed']})
        if (!res) {
          return
        }
        let upRes = await Upload.uploadImages(res.tempFilePaths[0])
        this.serviceCode[idx] = Object.assign(this.serviceCode[idx], {image_id: upRes.id, image_url: upRes.url})
        this.loaded()
        this.$apply()
      },
      delServiceCode(idx) {
        this.serviceCode[idx] = Object.assign(this.serviceCode[idx], {image_id: 0, image_url: ''})
        this.$apply()
      },
      showSerDetail(url, scale) {
        this.showMap = false
        this.$invoke('Picture', 'showPic', url, scale)
        this.$apply()
      },
      showPicDetail(url, scale) {
        this.showMap = false
        this.$invoke('Picture', 'showPic', url, scale)
        this.$apply()
      },
      showLogoDetail(url, scale, width) {
        this.showMap = false
        this.$invoke('Picture', 'showPic', url, scale, width)
        this.$apply()
      },
      async chioceAddress() {
        let res = await wepy.chooseLocation()
        this.site = res.address
        this.longitude = res.longitude
        this.latitude = res.latitude
        this.$apply()
      },
      checkTextarea() {
        this.textareaShow = true
        this.textareaFocus = true
        this.$apply()
      },
      hideTextarea() {
        this.textareaShow = false
        this.textareaFocus = false
        this.$apply()
      }
    }

    events = {
      radioChioseOK(item) {
        this.radioboxShow = false
        this.storeStatus = Number(item[0].value)
        this.storeStatusTxt = item[0].txt
        this.showMap = true
        this.$apply()
      },
      secondRadioOK(item, title) {
        switch (title) {
          case 'industries':
            if (item) {
              this.industry = item
              this.industryName = item.name
            }
            break
        }
        this.twoRadioboxShow = false
        this.showMap = true
        this.$apply()
      },
      nothingChiose() {
        this.showMap = true
        this.$apply()
      },
      showMapPic() {
        this.showMap = true
        this.$apply()
      }
    }

//    _mapAuto(address) {
//      let self = this
//      this.qqmapsdk.geocoder({
//        address: address,
//        success: (res) => {
//          let location = res.result.location
//          self.longitude = location.lng
//          self.latitude = location.lat
//          self.movelongitude = location.lng
//          self.movelatitude = location.lat
//          self.mapAddress = address
//          self.$apply()
//        },
//        fail: function(res) {
//        }
//      })
//    }

    _choiseChecked(arr) {
      arr.forEach((item) => {
        if (this.temporaryWeekChecked.indexOf(item.value) !== -1) {
          item.checked = true
        } else {
          item.checked = false
        }
      })
    }

    _testPropety(arr) {
      for (let i = 0, j = arr.length; i < j; i++) {
        if (!arr[i].value) {
          this.$invoke('Toast', 'show', arr[i].txt)
          return false
        }
        if (i === j - 1 && arr[i].value) {
          return true
        }
      }
    }

    computed = {
      weekShowTxt() {
        let week = {
          0: '周一',
          1: '周二',
          2: '周三',
          3: '周四',
          4: '周五',
          5: '周六',
          6: '周日'
        }
        let weekMsg = ''
        let arr = this.weekChecked.sort((a, b) => {
          return a - b
        })
        arr.forEach((item) => {
          weekMsg = weekMsg + week[item] + '，'
        })
        if (weekMsg) {
          return weekMsg.slice(0, -1)
        } else {
          return ''
        }
      },
      telTest() {
        let reg = TELREG
        let reg1 = PLANEREG
        let firstN = this.tel.slice(0, 1)
        if (this.tel.length >= 11 && firstN * 1 === 1) {
          return reg.test(this.tel)
        } else if (this.tel.length >= 10 && firstN * 1 === 0) {
          return reg1.test(this.tel)
        } else {
          return true
        }
      },
      telLengthTest() {
        return this.tel.length >= 10
      },
      storeImgTest() {
        let res = this.storeImgs.filter((item) => {
          return item.image_url
        })
        return res.length
      },
      textareaSwitch() {
        return this.longitude && this.latitude
      }
    }
  }
</script>

<style lang="stylus">
  @import "../../common/stylus/variable"

  .store-msg
    width: 100%
    overflow: hidden

    .store-msg-head
      padding-left: 12px
      background: $color-white
      margin-top: 10px

      view:last-child
        border-bottom: 0 none

    .store-msg-body
      margin-top: 10px
      padding-left: 12px
      background: $color-white

    .store-msg-foot
      margin-top: 10px
      padding-left: 12px
      background: $color-white

      view:last-child
        border-bottom: 0 none

    .store-msgBtn
      height: 44px
      padding: 10px 12px
      view
        background: $color-theme
        color: $color-white
        font-size: $font-size-medium
        border-radius: 2px
        line-height: 44px
        height: 100%
        text-align: center
        width: 100%
    .store-msg-txt
      padding-right: 12px
      display: flex
      height: 39px
      border-bottom: 0.5px solid $color-col-line
      justify-content: space-between
      align-items: center

      .store-msg-txt-left
        display: flex

        .store-msg-txt-show
          font-size: $font-size-medium
          line-height: 39px
          padding-left: 10vw

        .store-msg-txt-left-title
          width: 60px
          line-height: 39px
          color: $color-text-title
          font-size: $font-size-medium

        .store-msg-txt-left-input
          width: 50vw
          height: 39px
          font-size: $font-size-medium
          padding-left: 10vw

        .store-msg-txt-left-input.error
          color: $color-assist-f

        .placeholderTxt
          font-size: $font-size-medium
          color: $color-text-d

      .wordNum
        font-size: $font-size-small-s
        color: $color-text-d

    .store-msg-address-box
      display: flex
      min-height: 49px
      border-bottom: 0.5px solid $color-col-line
      justify-content: space-between
      align-items: center
      .store-msg-txt-left
        flex: 1
        overflow: hidden
        display: flex
        align-items: center
        .store-msg-txt-left-title
          width: 60px
          color: $color-text-title
          font-size: $font-size-medium
          margin-right: 10vw

        .store-msg-txt-left-input
          flex: 1
          overflow: hidden
          min-height: 40px
          font-size: $font-size-medium
          display: flex
          align-items: center
          position: relative
        .store-textarea
          width: 100%
          height: 100%
          margin: 0
          padding: 0
        .textarea-hide
          position: absolute
          left: 2000px
          top: 0
        .textarea-showTxt
          width: 100%
          font-size: $font-size-medium
          padding: 5px 0
          white-space: normal
          word-break: break-all
          line-height: 16px
        .gray.textarea-showTxt
          color: $color-text-d
        .placeholderTxt
          font-size: $font-size-medium
          color: $color-text-d
      .store-msg-txt-right
        width: 40px
        height: 100%
        display: flex
        justify-content: center
        align-items: center
        .store-msg-address-icon
          width: 18px
          height: 23px
          padding: 5px
    .store-msg-picker
      display: flex
      height: 39px
      border-bottom: 0.5px solid $color-col-line
      justify-content: space-between
      align-items: center
      padding-right: 12px
      position: relative

      .areaCover
        position: absolute
        z-index: 100
        left: 0
        right: 0
        top: 0
        bottom: 0

      .sitebox
        width: 50vw
        display: flex
        justify-content: flex-end

      .store-msg-picker-title
        width: 60px
        line-height: 39px
        color: $color-text-title
        font-size: $font-size-medium

      .store-msg-picker-right
        display: flex
        align-items: center
        height: 39px
        min-width: 150px
        justify-content: flex-end

        .store-msg-picker-arrow
          width: 10px
          height: 10px

        .store-msg-picker-txt
          font-size: $font-size-medium
          margin-right: 10px
        .store-msg-picker-txt-dis
          font-size: $font-size-medium
          color:$color-text-d

    .time-picker
      display: flex
      height: 40px
      align-items: center
      padding-right: 12px
      border-bottom: 0.5px solid $color-col-line

      .prize-picker-title
        flex: 2
        font-size: $font-size-medium
        color: $color-text-title

      .prize-picker-right
        flex: 5
        display: flex
        align-items: center
        height: 40px

        .prize-picker-txt
          display: flex
          align-items: center
          margin-left: 8vw

          .prize-picker-txt-time
            display: flex
            align-items: center
            .prize-picker-txt-time-title
              font-size: $font-size-medium
              color: $color-text-title
            .prize-picker-arrow
              width: 10px
              height: 10px
              margin-left: 3px

          .prize-picker-txt-middle
            font-size: $font-size-medium
            color: $color-text-d
            padding: 0 10px

      .prize-picker-right-dotted
        flex: 5
        display: flex
        justify-content: flex-end
        align-items: center

        .prize-picker-txt
          width: 60vw
          overflow: hidden
          white-space: nowrap
          text-overflow: ellipsis
          text-align: end
          font-size: $font-size-medium
          color: $color-text

        .store-msg-picker-arrow
          width: 10px
          height: 10px

    .storeMap
      border-bottom: 0 none
      padding-right: 12px
      display: flex
      justify-content: space-between
      min-height: 39px
      align-items: center

      .store-msg-txt-left
        display: flex
        justify-content: space-between

        .store-msg-txt-show
          font-size: $font-size-medium
          padding-left: 10vw
          width: 60vw
          line-height: 18px

        .store-msg-txt-left-title
          width: 60px
          color: $color-text-title
          font-size: $font-size-medium

    .store-msg-map
      padding-right: 12px
      height: 20vh
      padding-bottom: 10px
      position: relative

      .map-box
        width: 100%
        height: 100%
        display: block
      .map-box.hide
        display: none

      .mapIcon
        width: 33px
        height: 33px
        position: absolute
        left: 50%
        top: 50%
        transform: translate(-50%, -100%)

        .mapIcon-img
          width: 33px
          height: 33px

    .store-timeCover
      position: fixed
      z-index: 200
      left: 0
      top: 0
      height: 100vh
      width: 100vw
      background: rgba(54, 53, 71, .5)

      .store-time-center
        position: absolute
        left: 50%
        top: 50%
        transform: translate(-50%, -50%)
        background: $color-white
        width: 265px
        height: 400px
        border-radius: 4px

        .store-time-title
          height: 40px
          background: $color-theme
          line-height: 40px
          text-align: center
          color: $color-white
          font-size: $font-size-medium-x

        .store-time-box
          height: 320px
          overflow: hidden
          overflow-y: auto

          .store-week-list
            padding: 0 12px

            .radioBox-list-item
              line-height: 39px
              border-bottom: 0.5px solid $color-row-line
              font-size: $font-size-small

              .radioLabel
                display: block
                width: 100%
                position: relative

                .radio-Icon
                  width: 16px
                  height: 16px
                  position: absolute
                  right: 2px
                  top: 11px

              .radioLabel.active
                color: $color-assist-f

      .foot-btnBox
        height: 40px
        display: flex
        border-box: box-sizing
        background: $color-white

        .prizeItem-saveBtn
          flex: 1
          display: flex
          height: 40px
          align-items: center
          justify-content: center
          font-size: $font-size-medium

        .prizeItem-saveBtn.firstBtn
          color: $color-text-d

    .store-msg-logo
      padding-right: 12px
      display: flex
      border-bottom: 0.5px solid $color-col-line

      .store-msg-logo-title
        width: 70px
        line-height: 39px
        color: $color-text-title
        font-size: $font-size-medium

      .store-msg-logo-right
        display: flex
        width: 60vw
        flex-direction: column
        justify-content: center
        margin-left: 10vw

        .store-msg-logo-box
          padding: 10px 0
          display: flex

          .store-msg-logo-imgBox
            width: 55px
            height: 55px
            position: relative
            margin-right: 12px
            border: 1px solid $color-col-line
            border-radius: 4px

            .store-msg-logo-img
              width: 16px
              height: 16px
              padding: 19.5px
              display: block
              position: absolute
              left: 0
              top: 0

            .store-msg-logo-imgupdate
              display: block
              position: absolute
              left: 0
              top: 0
              width: 55px
              height: 55px
              border-radius: 4px

            .store-msg-logo-cancle
              display: block
              position: absolute
              width: 16px
              height: 16px
              top: -7px
              right: -7px

        .store-msg-logo-txt
          font-size: $font-size-small-s
          color: $color-text-d
          padding-bottom: 5px

</style>
