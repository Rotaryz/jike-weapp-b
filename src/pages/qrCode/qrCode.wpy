<template>
  <view class="code">
    <view class="qr-input">
      <view class="code-input">
        <view class="code-input-item" wx:for="0123456789" wx:key="{{item}}">
          {{code[item]}}
        </view>
      </view>
      <view class="qr-input-txt">请输入10位券码</view>
    </view>
    <view class="qR-num">
      <view class="num-item" wx:for="{{codeNum}}" wx:key="{{index}}"
            @touchstart="oncap({{index}},{{item.text}})"
            @touchend="endTap">
        <view class="nums">
          <text>{{item.text}}</text>
          <image src="{{item.image}}"></image>
        </view>
      </view>
      <form bindsubmit="getFormId" report-submit='true' class="num-item">
        <button class="num-item" @tap="submitCode" form-type="submit">
          <view class="nums">
            <image wx:if="{{imageUrlHead}}"
                   src="{{imageUrlHead + (testCode?'/defaults/b-image/page/pic-validate2@2x.png':'/defaults/b-image/page/pic-validate1@2x.png')}}"></image>
          </view>
        </button>
      </form>
      <view class="num-item" @touchstart="oncap(11)" @touchend="endTap"
            wx:if="{{code.length>0}}">
        <view class="nums">
          <image src="{{delectImg}}" class="delect-btn"></image>
        </view>
      </view>
    </view>
    <Toast></Toast>
  </view>
</template>

<script>
  /* eslint-disable no-undef */
  import wepy from 'wepy'
  import shop from 'api/shop'
  import base from 'common/mixins/base'
  import Toast from '@/base/toast/toast'
  import Tips from '@/common/js/tips'
  import URIS from 'common/js/config'
  import { ERR_OK } from 'api/base'

  const IMG1 = URIS.image + '/defaults/b-image/page/pic-button1@2x.png'
  const IMG2 = URIS.image + '/defaults/b-image/page/pic-button2@2x.png'
  const DELIMG1 = URIS.image + '/defaults/b-image/page/icon-shop_delete@2x.png'
  const DELIMG2 = URIS.image + '/defaults/b-image/page/icon-shop_delete2@2x.png'

  export default class Square extends wepy.page {
    mixins = [base]

    onShareAppMessage () {
      this.ShareAppMessage()
    }

    config = {
      navigationBarTitleText: '输码核销',
      navigationBarBackgroundColor: '#363547',
      navigationBarTextStyle: 'white'
    }
    components = {
      Toast: Toast
    }
    data = {
      imageUrlHead: URIS.image,
      codeNum: [{
        text: 1,
        image: IMG1
      }, {
        text: 2,
        image: IMG1
      }, {
        text: 3,
        image: IMG1
      }, {
        text: 4,
        image: IMG1
      }, {
        text: 5,
        image: IMG1
      }, {
        text: 6,
        image: IMG1
      }, {
        text: 7,
        image: IMG1
      }, {
        text: 8,
        image: IMG1
      }, {
        text: 9,
        image: IMG1
      }, {
        text: 0,
        image: IMG1
      }],
      code: '',
      delectImg: DELIMG1,
      loadIng: false,
      timer: null
    }

    methods = {
//      触摸时改变按钮状态
      oncap(index, num) {
        if (this.loadIng) {
          this.$invoke('Toast', 'show', '核销中...')
          return
        }
        if (index * 1 === 11) {
          if (this.code.length > 0) {
            wx.vibrateShort()
            this.code = this.code.slice(0, -1)
            this.timer = setInterval(() => {
              this.code = this.code.slice(0, -1)
              this.$apply()
              if (this.code.length === 0) {
                clearInterval(this.timer)
              }
            }, 200)
            this.delectImg = DELIMG2
            this.$apply()
          }
          return
        }
        if (this.code.length > 9) {
          return
        }
        wx.vibrateShort()
        this.codeNum = this.codeNum.map((item, idx) => {
          if (idx * 1 === index * 1) {
            return {
              text: num,
              image: IMG2
            }
          } else {
            return item
          }
        })
        this.code += num
        this.$apply()
      },
//      结束触摸时还原状态
      endTap() {
        clearInterval(this.timer)
        setTimeout(() => {
          this.codeNum.map((item) => {
            item.image = IMG1
            return item
          })
          this.delectImg = DELIMG1
          this.$apply()
        }, 100)
      },
//      提交验证
      async submitCode() {
        if (!this.testCode) {
          return
        }
        wx.vibrateShort()
        this.loadIng = true
        let res = await shop.verification(this.code)
        this.loaded()
        if (res.error === ERR_OK) {
          Tips.success('核销成功')
          this.code = ''
        } else {
          this.$invoke('Toast', 'show', res.message)
        }
        this.loadIng = false
        this.$apply()
      },
//      父店铺进行收集FormId
      async getFormId (e) {
        if (!this.testCode) {
          return
        }
        let parent = await wepy.getStorage({key: 'is_parent'})
        if (parent.data === 1) {
          const formId = e.detail.formId
          shop.form({form_ids: [formId]})
          this.loaded()
        }
      }
    }

    onLoad () {
      this.code = ''
    }

    computed = {
      testCode() {
        return this.code.length === 10
      }
    }
  }
</script>

<style lang="stylus">
  @import "../../common/stylus/variable"
  @import "../../common/stylus/mixin"
  page, .code
    height: 100vh
    overflow: hidden

  view
    box-sizing: border-box

  .qr-input
    background-color: $color-theme
    padding: 21px $padding 0
    .code-input
      display: flex
      .code-input-item
        width: 8.1333vw
        height: 13.3333vw
        margin-right: 5px
        border-radius: 2px
        background: $color-white
        display: flex
        align-items: center
        justify-content: center
        font-size: $font-size-large-bxx
        font-family: PingFangSC-Medium

      view:last-child
        margin-right: 0

    .qr-input-txt
      line-height: 34px
      text-align: center
      font-size: $font-size-small
      color: $color-text-d

  .qR-num
    height: 82.68%
    padding: 0 5px 15.5%
    display: flex
    flex-wrap: wrap
    margin: 5px auto 0px
    background-color: $color-white
    width: 97.33%

    .num-item
      width: 33.33%
      position: relative
      button
        position: absolute
        height: 100%
        width: 100%
        top: 0
        left: 0
        background: $color-white
        &::after
          border: none
      .nums
        width: 88px
        height: 88px
        position: absolute
        all-center()
        text-align: center
        line-height: 88px
        image
          height: 100%
          width: 100%
          all-center()
        text
          position: absolute
          top: 50%
          left: 50%
          transform: translate(-50%, -55%)
          z-index: 100
          font-family: $font-family-meddle
          font-size: $font-size-large-bxx

        .delect-btn
          width: 50px
          height: 50px
          padding-right: 10px

</style>
