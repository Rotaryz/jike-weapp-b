<template>
  <view class="bargain-active-list" @tap="hideNav">
    <header-switch title="疯狂砍价" wx:if="{{!showHeader}}" :isChecked.sync="switchStatus" :activityStatus.sync="activityStatus" :constObj.sync="switchConstObj">
    </header-switch>
    <view class="group-active-list-box" wx:if="{{showContent}}">
      <view class="g-a-l-nav" @tap="chooseStatus">
        <view class="g-a-l-n-item {{upStatus}}" id="1">已上线</view>
        <view class="g-a-l-n-item {{downStatus}}" id="0">已过期/已下线</view>
      </view>
      <scroll-view scroll-y class="g-a-l-article" scroll-top="{{height}}" bindscroll="setHeight" style="height:{{heightStyle}}" bindscrolltolower="_getMoreList">
        <view class="g-a-c-s-empty" wx:if="{{!activityList.length}}">
          <view class="e-box">
            <image class="e-pic" wx:if="{{imageUrlHead}}" src="{{imageUrlHead + '/defaults/b-image/mine/pic-empty@2x.png'}}"></image>
            <view class="e-txt">暂无数据</view>
          </view>
        </view>
        <repeat for="{{activityList}}" key="index" index="index" item="item">
          <activity-item :activeType.sync="type" :navList.sync="navList" :activeObj.sync="item"></activity-item>
        </repeat>
      </scroll-view>
      <!--<scroll-view scroll-y class="g-a-l-article" style="height:{{heightStyle}}" hidden="{{!downStatus}}" bindscrolltolower="_getMoreList">-->
        <!--<view class="g-a-c-s-empty" wx:if="{{!activityOffList.length}}">-->
          <!--<view class="e-box">-->
            <!--<image class="e-pic" wx:if="{{imageUrlHead}}" src="{{imageUrlHead + '/defaults/b-image/mine/pic-empty@2x.png'}}"></image>-->
            <!--<view class="e-txt">暂无数据</view>-->
          <!--</view>-->
        <!--</view>-->
        <!--<repeat for="{{activityOffList}}" key="index" index="index" item="item">-->
          <!--<activity-item :activeType.sync="type" :navList.sync="navList2" :activeObj.sync="item"></activity-item>-->
        <!--</repeat>-->
      <!--</scroll-view>-->
      <view class="g-a-l-btn-box">
        <view class="g-a-l-submit" @tap="toNewPage">新建</view>
      </view>
    </view>
  </view>
  <toast></toast>
  <confirm></confirm>
  <ConfirmMsg></ConfirmMsg>
  <view class="pic">
    <share :qrcode.sync="qrcode" :detail.sync="detail" :shop.sync="shop"></share>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import base from 'common/mixins/base'
  import URIS from 'common/js/config'
  import Toast from '@/base/toast/toast'
  import Confirm from '@/base/confirm/confirm'
  import ConfirmMsg from '@/base/confirm-msg/confirm-msg'
  import {ERR_OK} from 'api/base'
  import HeaderSwitch from '@/base/header-switch/header-switch'
  import ActivityItem from '@/base/activity-item/activity-item'
  import bargain from 'api/bargain'
  import Tips from 'common/js/tips'
  import GroupActive from 'api/group-active'
  import merchants from 'api/merchants'
  import Share from '@/base/share/share'
  import {
    UP,
    DOWN,
    ON,
    OFF,
    DEVICEINFO,
    SUCCESS,
    DEL
  } from 'api/share-active-config'

  let NAVLIST = [{text: '预览', icon: `${URIS.image}/defaults/b-image/marketing/icon-preview@2x.png`}, {text: '编辑', icon: `${URIS.image}/defaults/b-image/marketing/icon-compile_kj@2x.png`}, {text: '下线', icon: `${URIS.image}/defaults/b-image/marketing/icon-offline@2x.png`}, {text: '删除', icon: `${URIS.image}/defaults/b-image/marketing/icon-delete@2x.png`}, {text: '分享', icon: `${URIS.image}/defaults/b-image/marketing/icon-share_kj@2x.png`}, {text: '统计', icon: `${URIS.image}/defaults/b-image/marketing/icon-statistic@2x.png`}]
  let NAVLIST2 = [{text: '编辑', icon: `${URIS.image}/defaults/b-image/marketing/icon-compile_kj@2x.png`}, {text: '上线', icon: `${URIS.image}/defaults/b-image/marketing/icon-upline@2x.png`}, {text: '删除', icon: `${URIS.image}/defaults/b-image/marketing/icon-delete@2x.png`}, {text: '统计', icon: `${URIS.image}/defaults/b-image/marketing/icon-statistic@2x.png`}]
  export default class bargainActiveList extends wepy.page {
    mixins = [base]
    config = {
      navigationBarTitleText: '疯狂砍价',
      backgroundColor: '#f9f9f9',
      backgroundTextStyle: 'dark',
      enablePullDownRefresh: true
    }
    data = {
      qrcode: '',
      height: 0,
      navList: NAVLIST,
      navList2: NAVLIST2,
      type: 'bargain',
      imageUrlHead: URIS.image,
      activityStatus: SUCCESS, // 活动总开关
      status: UP, // tab栏状态
      switchConstObj: {
        ON,
        SUCCESS
      },
      isChecked: ON,
      imageUrl: URIS.image,
      page: 1,
      activityList: [],
      activityOffList: [],
      activityInList: [],
      delId: 0,
      downId: 0,
      nothing: false,
      appid: null,
      detail: {},
      shop: {},
      newData: '',
      upTotal: 0,
      downTotal: 0
    }
    async onPullDownRefresh() {
      await this.setList()
      wepy.stopPullDownRefresh()
    }
    onLoad(option) {
      if ('' + option.isChecked === 'true') {
        // 服务接口那边 true 总开关 false 打开总开关 ，true和false是字符串类型
        this.isChecked = OFF
      } else {
        this.isChecked = ON
      }
      this.$apply()
    }

    async onShow() {
      this.$invoke('activity-item', 'setLength', this.navList.length)
      this.$parent.updateGlobalData('shareCoupon', null)
      this.newData = this.$parent.globalData.newData || ''
      await this._getList()
      await this.setList()
      await this.autoOpen()
    }
    // 格式化服务器数据
    _formatRqData(res) {
      let arr = []
      res.map(item => {
        arr.push({
          merchant_id: item.merchant_id,
          id: item.id,
          src: item.image_url,
          hotName: item.activity_name,
          price: item.platform_price,
          hotPrice: item.bottom_price,
          statusType: item.status,
          statusTypeStr: item.status_str,
          goodStatus: item.promotion_status,
          stock: item.stock,
          sales_stock: item.promotion_status,
          show: false
        })
      })
      console.log(arr)
      return arr
    }
    // 获取上下线列表
    async _getList() {
      let data = {status: UP, page: 1}
      let res = await bargain.activityBargainList(data)
      this.shop = {name: res.shop_name, address: res.particular_address}
      this.upTotal = res.meta.total
      this.appid = res.wap_app_id
      res = this.infoRes(res)
      this.activityInList = this._formatRqData(res)
      let data2 = {status: DOWN, page: 1}
      let res2 = await bargain.activityBargainList(data2)
      this.loaded()
      this.downTotal = res2.meta.total
      res2 = this.infoRes(res2)
      this.activityOffList = this._formatRqData(res2)
      this.$apply()
    }
    // 加载更多
    async _getMoreList() {
      if (this.nothing) {
        return
      }
      this.page++
      if (this.page > 1) {
        let res = await bargain.activityBargainList({status: this.status, page: this.page})
        this._formatRqData(res)
        this.loaded()
        if (res.error === ERR_OK) {
          res = res.data
          this.activityList = this.activityList.concat(res)
          if (res.length === 0 && res) {
            this.nothing = true
          }
        }
      }
      this.$apply()
    }
    // 设置list
    async setList() {
      if (this.status === UP) {
        this.activityList = this.activityInList
      } else {
        this.activityList = this.activityOffList
      }
      this.$apply()
    }
    // 自动开启活动
    async autoOpen() {
      if (this.newData === 'NEW' && this.isChecked === OFF) {
        await this._rqChangeActiveStatus({status: 1, type: 3})
        this.isChecked = ON
        this.$apply()
        this.loaded()
      }
    }
    //    删除活动
    async _delBargain() {
      let res = await bargain.delActivityBargain(this.delId)
      this.loaded()
      if (res.error !== ERR_OK) {
        return
      }
      await this._getList()
      await this.setList()
      this.$apply()
    }

    // 下线活动
    async _DownActive() {
      let res = await bargain.downActivityBargain(this.downId)
      if (res.error === ERR_OK) {
        this.loaded()
        let item = this.activityList[this.activityList.findIndex(val => val.id * 1 === this.downId)]
        this.activityOffList.unshift(item)
        this.cupList(this.downId)
        Tips.success('下线成功')
      }
    }
    // 上线时修改位置
    cupList(id) {
      if (this.status === UP) {
        this.activityList.splice(this.activityList.findIndex(val => val.id * 1 === id), 1)
      } else {
        this.activityList.splice(this.activityList.findIndex(val => val.id * 1 === id), 1)
      }
      this.$apply()
    }

    infoRes(res) {
      if (res.error === ERR_OK) {
        return res.data
      }
    }

    async _rqChangeActiveStatus(data) {
      let json = await GroupActive.changeActiveStatus(data)
      if (json.error === ERR_OK) {
        this.loaded()
        return true
      } else {
        this.loaded()
        this.$invoke('toast', 'show', json.message)
        return false
      }
    }

    methods ={
      setHeight(e) {
        this.height = e.currentTarget.offsetTop
      },
//      新建
      toNewPage() {
        let url = `/pages/new-bargain-activity/new-bargain-activity`
        this.$navigate(url)
        this.toNewTimer = null
      },
      hideNav() {
        this.activityList.map((items, idx) => {
          items.show = false
          return items
        })
      },
//      nav切换
      async chooseStatus(e) {
        this.height = 0
        this.page = 1
        this.nothing = false
        let id = e.target.id
        if (id !== UP && id !== DOWN) {
          return
        }
        this.status = id
        switch (this.status) {
          case '1':
            this.navList = NAVLIST
            break
          case '0':
            this.navList = NAVLIST2
            break
        }
        this.$invoke('activity-item', 'setLength', this.navList.length)
        await this.setList()
      },
//      活动按钮
      switchStatus() {
        return this.isChecked
      }
    }

    computed = {
      showHeader() {
        return this.activityInList.length === 0 && this.activityOffList.length === 0
      },
      showContent() {
        return (this.upTotal === 0 && this.downTotal === 0) || (this.isChecked === 'on')
      },
      switchStatus() {
        return this.isChecked
      },
      upStatus() {
        return this.status === UP ? 'active' : ''
      },
      downStatus() {
        return this.status === DOWN ? 'active' : ''
      },
      heightStyle() {
        return this.showHeader ? (DEVICEINFO.height - 82) + 'px' : (DEVICEINFO.height - 82 - 55) + 'px'
      }
    }
    events = {
      async share(item) {
        // 下载二维码
        let path = `pages/coupon-detail/coupon-detail?m=${item.merchant_id}&id=${item.promotion_id}&a=${item.id}&s=bargain`
        let res = await merchants.getMerchantQRcode(true, {path, is_custom: 1})
        this.loaded()
        this.qrcode = res.data.url
        this.detail = item
        this.$invoke('share', 'show', 'bargain')
        this.$invoke('share', '_drawCanvas')
        this.$apply()
      },
      activityDetail(item) {
        wepy.navigateToMiniProgram({
          appId: this.appid,
          path: `pages/coupon-detail/coupon-detail?m=${item.merchant_id}&id=${item.promotion_id}&a=${item.id}&s=bargain`,
          extraData: {},
          envVersion: URIS.jumpVersion, // develop
          success(res) {
            // 打开成功
          }
        })
      },
      async headerSwitchChange() {
        let type = '3' // 1团购活动 2分享赚钱活动
        // 活动状态，0关闭，1开启
        let status = this.isChecked === ON ? '0' : '1'
        let flag = await this._rqChangeActiveStatus({status, type})
        if (flag) {
          status === '1' ? Tips.success('开启成功') : Tips.success('关闭成功')
          this.isChecked = this.isChecked === ON ? OFF : ON
          this.$apply()
        }
      },
      activeBtnEditor(res) {
        let url = `/pages/new-bargain-activity/new-bargain-activity?id=${res.id}&type=${res.status}`
        this.$navigate(url)
      },
      activeBtnDel(res) {
        this.delId = res.id
        this.currentChooseType = DEL
        this.$invoke('confirm', 'show')
      },
      activeBtnOffline(res) {
        this.downId = res.id
        this.currentChooseType = DOWN
        this.$invoke('ConfirmMsg', 'show', {title: '确定要下线'})
      },
      async activeBtnOnline(item) {
        let res = await bargain.upActivityBargain(item.id)
        if (res.error === ERR_OK) {
          await this.setList()
          this.loaded()
          Tips.success('上线成功')
        } else {
          this.$invoke('toast', 'show', res.message)
          this.loaded()
        }
      },
      async confirm() {
        if (this.currentChooseType === DOWN) {
          await this._DownActive()
        } else {
          await this._delBargain()
        }
        // 删除确认
      },
      showNav(item) {
        let index = this.activityList.findIndex((val) => val.id === item.id)
        this.activityList.map((items, idx) => {
          items.show = false
          if (idx === index) {
            items = item
          }
          return items
        })
        this.activityList[index] = item
        this.$apply()
      },
      hideNav(item) {
        let index = this.activityList.findIndex((val) => val.id === item.id)
        this.activityList[index] = item
        this.$apply()
      }
    }

    components = {
      'header-switch': HeaderSwitch,
      'activity-item': ActivityItem,
      'activity-item-down': ActivityItem,
      'confirm': Confirm,
      'toast': Toast,
      'ConfirmMsg': ConfirmMsg,
      'share': Share
    }
  }
</script>

<style lang="stylus">
    @import '../../common/stylus/variable'
    @import '../../common/stylus/mixin'
    .pic
      position: fixed
      z-index: 9999
    .g-a-c-s-empty
      background-color: $color-white
      height: 100%
      layout()
      box-sizing: border-box
      padding-top: 11.8%
      align-items: center
      .e-box
        layout()
        justify-content: center
        align-items: center
        .e-pic
          width: 95.5px
          height: 75.5px
          margin-bottom: 13.5px
        .e-txt
          font-family: $font-family-light
          font-size: $font-size-small
          color: $color-text-d
    .group-active-list-box
      position: relative
      background-color: $color-background
      .g-a-l-nav
        layout(row)
        justify-content: space-around
        align-items: center
        height: 42.5px
        font-family: $font-family-light
        font-size: $font-size-medium
        color: $color-text
        border: 0.5px solid $color-split-line
        border-right: none
        border-left: none
        background-color: $color-white
        .g-a-l-n-item
          padding: 0 8px
          height: 100%
          line-height: 42.5px
          transition: 0.3 all
          color: $color-text
          border-bottom-line($color-assist-f, 0, 0)
        .active
          color: $color-assist-f
          position: relative
          &:after
            content: ''
            position: absolute
            bottom: 0
            left: 50%
            transform: translateX(-50%)
            height: 1px
            width: 15.5vw
            border-bottom: 2px solid $color-assist-f

    .g-a-l-btn-box
      position: fixed
      bottom: 0
      z-index :100
      width: 100%
      height: 82px
      box-sizing: border-box
      padding: 18px 12px 20px
      layout()
      justify-content: center
      align-items: center
      background-color: $color-background
      border-top: 0.5px solid $color-row-line
      .g-a-l-submit
        layout()
        justify-content: center
        align-items: center
        width: 100%
        height: 100%
        background: $color-theme
        border-radius: 4px
        font-family: $font-family-regular
        font-size: $font-size-medium
        color: $color-white
        letter-spacing: 1.02px

  .g-a-l-article
    background :$color-white
    box-sizing :border-box
</style>
