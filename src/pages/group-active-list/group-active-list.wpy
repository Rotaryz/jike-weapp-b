<template>
  <view class="group-active-list">
    <header-switch title="团购" :isChecked.sync="switchStatus" :activityStatus.sync="activityStatus">
      <view class="group-active-list-box">
        <view class="g-a-l-nav" @tap="chooseStatus">
          <view class="g-a-l-n-item {{upStatus}}" id="0">已上线</view>
          <view class="g-a-l-n-item {{downStatus}}" id="1">已过期/已下线</view>
        </view>
        <scroll-view scroll-y class="g-a-l-article" style="height:{{heightStyle}}" hidden="{{!upStatus}}" bindscrolltolower="_getMoreList">
          <repeat for="{{onlineList}}" key="index" index="index" item="item">
            <view class="g-a-l-a-item">
              <activity-item :activeType.sync="type" :activeObj.sync="item"></activity-item>
            </view>
          </repeat>
          <view class="g-a-c-s-empty" wx:if="{{isEmpty}}">
            <view class="e-box">
              <image class="e-pic" wx:if="{{imageUrlHead}}" src="{{imageUrlHead + '/defaults/b-image/mine/pic-empty@2x.png'}}"></image>
              <view class="e-txt">暂无数据</view>
            </view>
          </view>
        </scroll-view>
        <scroll-view scroll-y class="g-a-l-article" style="height:{{heightStyle}}" hidden="{{!downStatus}}" bindscrolltolower="_getMoreList">
          <repeat for="{{offlineList}}" key="index" index="index" item="item">
            <view class="g-a-l-a-item">
              <activity-item :activeType.sync="type" :activeObj.sync="item"></activity-item>
            </view>
          </repeat>
          <view class="g-a-c-s-empty" wx:if="{{isEmpty}}">
            <view class="e-box">
              <image class="e-pic" wx:if="{{imageUrlHead}}" src="{{imageUrlHead + '/defaults/b-image/mine/pic-empty@2x.png'}}"></image>
              <view class="e-txt">暂无数据</view>
            </view>
          </view>
        </scroll-view>
        <view class="g-a-l-btn-box">
          <view class="g-a-l-submit" @tap="toNewPage">新建</view>
        </view>
      </view>
    </header-switch>
    <toast></toast>
    <confirm></confirm>
  </view>
</template>

<script>
  /* eslint-disable no-undef */
  import wepy from 'wepy'
  import base from '@/common/mixins/base'
  import URIS from 'common/js/config'
  import HeaderSwitch from '@/base/header-switch/header-switch'
  import ActivityItem from '@/base/activity-item/activity-item'
  import Toast from '@/base/toast/toast'
  import Confirm from '@/base/confirm/confirm'
  import GroupActiveAPI from 'api/group-active'
  import {ERR_OK} from 'api/base'
  import {UP, DOWN, ON, OFF, DEVICEINFO, NEW, EDITOR, UPPAGELIMIT, DOWNPAGELIMIT, SUCCESS} from 'api/group-active-config'

  export default class GAList extends wepy.page {
    mixins = [base]

    data = {
      imageUrlHead: URIS.image,
      activityStatus: 'failed', // 活动总开关
      status: UP, // tab栏状态
      onlineList: [],
      offlineList: [],
      isChecked: ON,
      type: 'group',
      paramsUp: {
        page: 1,
        limit: UPPAGELIMIT
      },
      paramsDown: {
        page: 1,
        limit: DOWNPAGELIMIT
      },
      isAllUp: false,
      isAllDown: false,
      showTabDownCount: 0,
      toNewTimer: null,
      toEditorTimer: null
    }

    async onLoad() {
      await this._init(this.status)
    }

    onShow() {
    }

    async onPullDownRefresh() {
      let params = this._resetConfig()
      await this._getNewActiveList(this.status, params)
      wx.stopPullDownRefresh()
    }

    // 重置配置
    _resetConfig() {
      let page, limit
      if (this.status === UP) {
        this.isAllUp = false
        this.paramsUp.page = 1
        page = this.paramsUp.page
        limit = this.onlineList.length >= UPPAGELIMIT ? this.onlineList.length : UPPAGELIMIT
      } else {
        this.paramsDown.page = 1
        this.isAllDown = false
        page = this.paramsDown.page
        limit = this.offlineList.length >= DOWNPAGELIMIT ? this.offlineList.length : DOWNPAGELIMIT
      }
      this.$apply()
      return {page, limit}
    }

    // 获取新的活动
    async _getNewActiveList(status, params) {
      let res = {}
      if (status === UP) {
        res = await this._rqGetGroupActiveList(params, status)
        res && (this.onlineList = res.data)
        res && (this.activityStatus = res.status.toString())
      } else {
        res = await this._rqGetGroupActiveList(params, status)
        res && (this.offlineList = res.data)
      }
      if (res) {
        this._checkIsAll(res)
      }
      this.$apply()
      this.loaded()
    }

    // 初始化
    async _init(status) {
      let res = {}
      if (status === UP) {
        res = await this._rqGetGroupActiveList(this.paramsUp, status)
        res && (this.onlineList = res.data)
        res && (this.activityStatus = res.status.toString())
      } else {
        res = await this._rqGetGroupActiveList(this.paramsDown, status)
        res && (this.offlineList = res.data)
      }
      if (res) {
        this._checkIsAll(res)
      }
      this.$apply()
      this.loaded()
    }

    // 获得更多的活动列表
    async _getMoreList() {
      let status = this.status
      let res = {}
      if (status === UP) {
        if (this.isAllUp) return
        this.paramsUp.page++
        res = await this._rqGetGroupActiveList(this.paramsUp, status)
        res && (this.onlineList.push(...res.data))
      } else {
        if (this.isAllDown) return
        this.paramsDown.page++
        res = await this._rqGetGroupActiveList(this.paramsDown, status)
        res && (this.offlineList.push(...res.data))
      }
      if (res) {
        this._checkIsAll(res)
      }
      this.$apply()
      this.loaded()
    }

    // 检查是否已经查询完毕
    _checkIsAll(res) {
      console.log(this.onlineList)
      if (this.status === UP) {
        if (this.onlineList.length >= res.meta.total * 1) {
          // || this.onlineList.length % UPPAGELIMIT !== 0
          // this.$invoke('underline', 'show')
          this.isAllUp = true
        }
      } else {
        if (this.offlineList.length >= res.meta.total * 1) {
          // || this.onlineList.length % DOWNPAGELIMIT !== 0
          // this.$invoke('underline', 'show')
          this.isAllDown = true
        }
      }
      console.log(this.isAllUp, 1, this.isAllDown, 2)
      this.$apply()
    }

    // 获取活动列表(分页)
    async _rqGetGroupActiveList(params, type) {
      const json = await GroupActiveAPI.getGroupActiveList(params, type)
      if (json.error === ERR_OK) {
        console.log(json)
        return json
      } else {
        this.$invoke('toast', 'show', json.message)
        this.loaded()
      }
    }

    // 格式化服务器数据
    _formatRqData(res) {
      let arr = []
      res.data.map(item => {
        arr.push({
          id: item.id,
          src: item.image_url,
          peopleNum: item.config.group_number,
          hotName: item.activity_name,
          price: item.platform_price,
          hotPrice: item.config.group_price,
          status: item.status === UP ? '已上线' : '已下线',
          statusType: item.status,
          serverType: item.promotion_title,
          addNum: item.stock,
          hotEndDate: item.end_at,
          timeLimit: item.config.group_validity,
          inventory: item.promotion_stock,
          goodId: item.good_ids
        })
      })
      return arr
    }

    // 检查下线栏的次数
    _isTabDownInit() {
      if (this.status === DOWN) {
        if (this.showTabDownCount++ <= 0) {
          this.$apply()
          return true
        }
        return false
      }
    }

    // 上线或下线
    _upOrDown(obj) {
      // 请求服务器成功后
      if (this.status === UP) {
        this.onlineList.splice(this.onlineList.findIndex(val => val.id === obj.id), 1)
        this.offlineList.unshift(obj)
      } else {
        this.offlineList.splice(this.offlineList.findIndex(val => val.id === obj.id), 1)
        this.onlineList.unshift(obj)
      }
      this.$apply()
    }

    methods = {
      async chooseStatus(e) {
        let id = e.target.id
        if (id !== UP && id !== DOWN) {
          return
        }
        this.status = id
        if (this._isTabDownInit()) {
          await this._init(this.status)
        }
        console.log(this.showTabDownCount)
        this.$apply()
      },
      toNewPage() {
        if (this.toNewTimer != null) return
        this.toNewTimer = setTimeout(() => {
          let url = `/pages/group-active-editor/group-active-editor?model=${NEW}`
          this.$navigate(url)
          clearTimeout(this.toNewTimer)
          this.toNewTimer = null
          this.$apply()
        }, 50)
      }
    }
    events = {
      headerSwitchChange() {
        this.isChecked = this.isChecked === ON ? OFF : ON
        this.$apply()
      }
    }
    computed = {
      upStatus() {
        return this.status === UP ? 'active' : ''
      },
      downStatus() {
        return this.status === DOWN ? 'active' : ''
      },
      isEmpty() {
        if (this.status === UP) {
          return this.onlineList.length === 0
        } else {
          return this.offlineList.length === 0
        }
      },
      switchStatus() {
        return this.isChecked
      },
      heightStyle() {
        return this.activityStatus === SUCCESS ? (DEVICEINFO.height - 82 - 60 - 44.5) + 'px' : (DEVICEINFO.height - 82 - 44.5) + 'px'
      }
    }
    events = {
      headerSwitchChange() {
        this.isChecked = this.isChecked === ON ? OFF : ON
        this.$apply()
      },
      activeBtnOne(obj) {
        this._upOrDown(obj)
      },
      activeBtnTwo(obj) {
        this.$invoke('confirm', 'show')
      },
      activeBtnThree(obj) {
        this.$parent.globalData.groupActive.currentGroupActive = obj
        if (this.toEditorTimer != null) return
        this.toEditorTimer = setTimeout(() => {
          let url = `/pages/group-active-editor/group-active-editor?model=${EDITOR}`
          this.$navigate(url)
          clearTimeout(this.toEditorTimer)
          this.toEditorTimer = null
          this.$apply()
        }, 50)
      },
      confirm() {
        // 删除确认
      }
    }
    components = {
      'header-switch': HeaderSwitch,
      'activity-item': ActivityItem,
      'confirm': Confirm,
      'toast': Toast
    }
    config = {
      navigationBarTitleText: '团购',
      navigationBarBackgroundColor: '#363547',
      navigationBarTextStyle: 'white',
      backgroundColor: '#f9f9f9',
      backgroundTextStyle: 'dark',
      enablePullDownRefresh: true
    }
  }
</script>

<style lang='stylus'>
  @import "../../common/stylus/mixin.styl"
  @import "../../common/stylus/variable.styl"

  .g-a-c-s-empty
    background-color: $color-white
    height: 69vh
    layout()
    justify-content: center
    align-items: center
    .e-box
      layout()
      justify-content: center
      align-items: center
      margin-top: -50.5%
      .e-pic
        width: 95.5px
        height: 75.5px
        margin-bottom: 13.5px
      .e-txt
        font-family: $font-family-light
        font-size: $font-size-small
        color: $color-text-d

  .group-active-list-box
    position: relative
    background-color: $color-background
    .g-a-l-nav
      layout(row)
      justify-content: space-around
      align-items: center
      height: 42.5px
      font-family: $font-family-light
      font-size: $font-size-medium
      color: $color-text
      border: 0.5px solid $color-split-line
      border-right: none
      border-left: none
      background-color: $color-white
      .g-a-l-n-item
        padding: 0 8px
        height: 100%
        line-height: 42.5px
        transition: 0.3 all
        color: $color-text
        border-bottom-line($color-assist-f, 0, 0)
      .active
        color: $color-assist-f
        position: relative
        &:after
          content: ""
          position: absolute
          bottom: 0
          left: 50%
          transform: translateX(-50%)
          height: 1px
          width: 15.5vw
          border-bottom: 2px solid $color-assist-f
    .g-a-l-article
      background-color: $color-white
      padding-bottom: 82px
      .g-a-l-a-item
        padding: 0 12px
        margin: 10px 0
    .g-a-l-btn-box
      position: fixed
      bottom: 0
      width: 100%
      height: 82px
      box-sizing: border-box
      padding: 18px 12px 20px
      layout()
      justify-content: center
      align-items: center
      background-color: $color-background
      border-top: 0.5px solid $color-row-line
      .g-a-l-submit
        layout()
        justify-content: center
        align-items: center
        width: 100%
        height: 100%
        background: $color-theme
        border-radius: 4px
        font-family: $font-family-regular
        font-size: $font-size-medium
        color: $color-white
        letter-spacing: 1.02px

</style>
