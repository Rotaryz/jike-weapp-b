<template>
  <view class="content-big">
    <NavHeader>
      <view wx:for="{{navList}}"
            class="{{navNum === item.type ? 'choice' : ''}}"
            wx:key="{{index}}" @tap="showMsg({{item.type}})">
        <text>{{item.text}}</text>
      </view>
    </NavHeader>
    <Blank></Blank>
    <scroll-view scroll-y bindscrolltolower="showMore">
      <view class="content-coupon">
        <view class="con-cou-item" wx:for="{{contentList}}" wx:key="{{index}}">
          <image wx:if="{{imageUri}}"
                 src="{{item.image_url !== '' ? item.image_url : imageUri + '/defaults/b-image/page/bk.jpg'}}"></image>
          <view>
            <view class="con-cou-item-ri">
              <view>
                <image wx:if="{{imageUri}}"
                       src="{{imageUri + '/defaults/b-image/page/star@2x.png'}}"></image>
                {{item.favorite_count}}
              </view>
              <view>
                <image wx:if="{{imageUri}}"
                       src="{{imageUri + '/defaults/b-image/page/icon-share@2x.png'}}"></image>
                {{item.share_count}}
              </view>
            </view>
            <view class="con-cou-item-le">
              <view @tap="nvaContent({{item.id}})">编辑</view>
              <view @tap="delCon({{item.id}},{{index}})">删除</view>
              <view @tap="access({{item.id}},{{index}})">{{
                textType[navNum].text}}
              </view>
            </view>
          </view>
        </view>
      </view>
    </scroll-view>
    <view class="con-submit" @tap="create">
      <view>
        创建内容
      </view>
    </view>
    <Confirm></Confirm>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import NavHeader from '@/base/nav-header/nav-header'
  import content from 'api/content'
  import base from 'common/mixins/base'
  import Blank from '@/base/blank/blank'
  import Confirm from '@/base/confirm/confirm'
  import URIS from 'common/js/config'
  import { ERR_OK } from 'api/base'
  export default class Content extends wepy.page {
    mixins = [base]

    onShareAppMessage () {
      this.ShareAppMessage()
    }

    config = {
      navigationBarTitleText: '内容管理',
      navigationBarBackgroundColor: '#363547',
      navigationBarTextStyle: 'white'
    }
    components = {
      NavHeader: NavHeader,
      Blank: Blank,
      Confirm: Confirm
    }
    data = {
      imageUri: URIS.image,
      navNum: 1,
      navList: [{
        text: '已上线',
        type: 1
      }, {
        text: '未上线',
        type: 0
      }],
      textType: [{
        text: '上线',
        type: 0
      }, {
        text: '下线',
        type: 1
      }],
      contentList: [],
      nothing: false,
      page: 1,
      id: '',
      index: ''
    }

    _showBlank (res) {
      if (res.length === 0) {
        this.$invoke('Blank',
          'show',
          this.imageUri + '/defaults/b-image/common/pic-empty_content@2x.png', '暂无内容, 马上发布内容', '15.2')
      } else {
        this.$invoke('Blank', 'hide')
      }
    }

    methods = {
      async nvaContent(id) {
        await wepy.navigateTo({
          url: `../create-content/create-content?status=${this.navNum}&id=${id}`
        })
      },
      async showMsg(num) {
        this.nothing = false
        this.page = 1
        this.navNum = num
        this.contentList = []
        this.$apply()
        this.load()
      },
      async access(id, index) {
        let res = await content.switchOnline(id)
        this.loaded()
        if (res.error === 0) {
          this.contentList.splice(index, 1)
          this.$apply()
        }
      },
      delCon(id, index) {
        this.$invoke('Confirm', 'show')
        this.id = id
        this.index = index
      },
      async create() {
        await wepy.navigateTo({
          url: '/pages/create-content/create-content'
        })
      },
      async showMore() {
        if (this.nothing) {
          return
        }
        this.page++
        if (this.page > 1) {
          let res = await this.load(this.page)
          if (res.length === 0 && res) {
            this.nothing = true
          }
        }
        this.$apply()
      }
    }
    events = {
      'confirm': async () => {
        let res = await content.delContent(this.id)
        this.loaded()
        if (res.error === 0) {
          this.contentList.splice(this.index, 1)
          this.$apply()
        }
      }
    }

    async load (page = 1) {
      let data = {status: this.navNum, page: page}
      let res = await content.contentList(data)
      if (res.error === ERR_OK) {
        this.contentList = this.contentList.concat(res.data)
        this._showBlank(this.contentList)
        this.loaded()
        this.$apply()
        return res.data
      }
    }

    async onShow() {
      this.nothing = false
      this.contentList = []
      this.page = 1
      await this.load()
      this.$apply()
    }
  }
</script>

<style lang="stylus">
  @import "../../common/stylus/variable"
  @import "../../common/stylus/mixin"
  scroll-view
    height: 94vh

  .content-big
    height: 100vh
    overflow-y: hidden

  .content-coupon
    padding: 0 3.2vw 70px
    display: flex
    width: 100vw
    box-sizing: border-box
    flex-direction: column
    .con-cou-item
      margin-top: 10px
      height: 37.34vw
      image
        width: 100%
        height: 26.67vw
      > view
        background: $color-white
        display: flex
        justify-content: space-between
        height: 10.67vw
        align-items: center
        margin-top: -2px
        padding: 0 3.2vw
        image
          height: 10px
          width: 10px
        view
          display: inline-block
          font-size: $font-size-small
          color: $color-text-d
        .con-cou-item-ri
          view
            margin-right: 17px
            &:last-child
              margin-right: 0
        .con-cou-item-le
          view
            font-size: $font-size-small-s
            padding: 1.3vw 5.3vw
            border-radius: 2px
            margin-right: 5px
            border: 0.5px solid $color-text-d
            color: $color-theme
            &:last-child
              margin-right: 0
              border: 0.5px solid $color-assist-f
              color: $color-assist-f

  .con-submit
    position: fixed
    width: 100%
    bottom: 0px
    height: 14.93vw
    background: $color-background
    view
      position: absolute
      bottom: 12px
      left: 12px
      width: 93.6%
      height: 11.73vw
      line-height: 11.73vw
      background: $color-theme
      color: $color-white
      text-align: center
      font-size: $font-size-medium
      border-radius: 4px

  .client-head
    view
      text
        width: 45%
</style>
