<template>
  <view class="shop-qrcode">
    <canvas canvas-id="myCanvas{{index}}" class="canvas" hidden="{{true}}" wx:for="{{canvasArr}}" wx:key="{{index}}"></canvas>
    <swiper class="top" current="{{bigImgIdx}}" duration="300" bindchange="imgMove">
      <block wx:for="{{imgArr}}" wx:key="{{item}}">
        <swiper-item>
          <image class="qrcode-img" src="{{item}}" @tap="showImg({{item}})"></image>
        </swiper-item>
      </block>
    </swiper>
    <view class="down">
      <view class="title">选择模板后点击大图预览</view>
      <view class="item-list">
        <view class="item" @tap="changeImg({{index}})" wx:for="{{imgArr}}" wx:key="{{item}}">
          <image src="{{item}}" class="item-img" mode="aspectFill"></image>
          <image class="checked-img" wx:if="{{imageUrlHead && index === smallImgIdx && item}}" src="{{imageUrlHead + '/defaults/b-image/mine/icon-login_right@2x.png'}}"></image>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import base from 'common/mixins/base'
  import URIS from 'common/js/config'
  import Merchant from '@/api/merchants'
  import {ERR_OK} from '@/api/base'
  import Tips from 'common/js/tips'

  export default class ShopQRcode extends wepy.page {
    mixins = [base]

    config = {
      navigationBarTitleText: '店铺二维码',
      navigationBarBackgroundColor: '#363547',
      navigationBarTextStyle: 'white'
    }

    data = {
      imageUrlHead: URIS.image,
      shopName: '',
      qrcode: '',
      bigImgIdx: 0,
      smallImgIdx: 0,
      imgArr: ['', '', '', '', ''],
      canvasArr: [0, 1, 2, 3, 4]
    }

    methods = {
      async showImg(url) {
        await wepy.previewImage({
          current: url,
          urls: this.imgArr
        })
      },
      changeImg(idx) {
        this.bigImgIdx = idx * 1
        this.smallImgIdx = idx * 1
        this.$apply()
      },
      imgMove(e) {
        if (e.detail.source === 'touch') {
          this.smallImgIdx = e.detail.current * 1
          this.$apply()
        }
      }
    }

    async onLoad () {
      Tips.loading('生成中')
      await this.load()
      // 小程序码
      const qrcode = await wepy.downloadFile({url: this.qrcode})
      let imgs = await this.getImgs([0, 1, 2, 3, 4], qrcode)
      this.imgArr = [...imgs]
      this.$apply()
      Tips.loaded()
    }

    async load() {
      let resData = await Merchant.getMerchantQRcode(false)
      if (resData.error !== ERR_OK) {
        return
      }
      this.shopName = resData.data.shop_name
      this.qrcode = resData.data.url
      this.$apply()
    }

    async getImgs(data, qrcode) {
      let resArr = await Promise.all(data.map(async (item, index) => {
        let res = await this.drawImage(index, qrcode)
        return res
      }))
      return resArr
    }

    async drawImage(idx, qrcode) {
      let name = 'myCanvas' + idx
      const ctx = await wepy.createCanvasContext(name)
      // 背景
      const bg = await wepy.downloadFile({url: URIS.image + '/defaults/b-image/mine/pic-bg' + idx + '@2x.png'})
      let bgImg = bg.tempFilePath
      let QR = qrcode.tempFilePath
      switch (idx * 1) {
        case 0:
          ctx.setFillStyle('white')
          ctx.fillRect(670, 1335, 340, 340)
          ctx.drawImage(QR, 674, 1341, 326, 326)
          ctx.drawImage(bgImg, 0, 0, 1132, 1800)
          ctx.setFillStyle('black')
          ctx.setFontSize(72)
          ctx.setTextAlign('center')
          ctx.fillText(this.shopName, 566, 155)
          break
        case 1:
          ctx.setFillStyle('white')
          ctx.fillRect(690, 1360, 340, 340)
          ctx.drawImage(QR, 696, 1366, 322, 322)
          ctx.drawImage(bgImg, 0, 0, 1132, 1800)
          ctx.setFillStyle('white')
          ctx.setFontSize(60)
          ctx.fillText(this.shopName, 90, 1480)
          break
        case 2:
          ctx.setFillStyle('white')
          ctx.fillRect(400, 1350, 340, 340)
          ctx.drawImage(QR, 404, 1358, 322, 322)
          ctx.drawImage(bgImg, 0, 0, 1132, 1800)
          ctx.setFillStyle('black')
          ctx.setFontSize(60)
          ctx.fillText(this.shopName, 176, 1010)
          break
        case 3:
          ctx.setFillStyle('white')
          ctx.fillRect(700, 1405, 340, 340)
          ctx.drawImage(QR, 704, 1408, 322, 322)
          ctx.drawImage(bgImg, 0, 0, 1132, 1800)
          ctx.setFillStyle('black')
          ctx.setFontSize(60)
          ctx.fillText(this.shopName, 94, 1570)
          break
        case 4:
          ctx.setFillStyle('white')
          ctx.fillRect(410, 1040, 320, 320)
          ctx.drawImage(QR, 414, 1044, 296, 296)
          ctx.drawImage(bgImg, 0, 0, 1132, 1800)
          ctx.setFillStyle('white')
          ctx.setFontSize(60)
          ctx.setTextAlign('center')
          ctx.fillText(this.shopName, 566, 834)
          break
      }
      ctx.draw()
      const res = await wepy.canvasToTempFilePath({
        x: 0,
        y: 0,
        width: 1132,
        height: 1800,
        destWidth: 1132,
        destHeight: 1800,
        canvasId: name
      })
      return res.tempFilePath
    }
  }
</script>

<style lang="stylus">
  @import "../../common/stylus/variable"
  @import "../../common/stylus/mixin"

  page
    width: 100vw
    height: 100vh
    background: $color-theme
    overflow: hidden

    .canvas
      width: 1132px
      height: 1800px

    .top
      height: 80vh
      position: relative
      .qrcode-img
        width: 75.466666666666vw
        height: 120vw
        position: absolute
        left: 50%
        top: 50%
        transform: translate(-50%, -50%)
        border-radius: 5px
    .down
      height: 20vh
      background: $color-white
      display: flex
      flex-direction: column
      justify-content: center
      .title
        width: 100%
        text-align: center
        font-size: $font-size-small
        color: $color-text-d
        margin-bottom: 15px
      .item-list
        width: 100%
        height: 14.66666666666vw
        display: flex
        justify-content: center
        .item
          width: 14.66666666666vw
          height: 14.66666666666vw
          margin-right: 4.5vw
          position: relative
          box-sizing: border-box
          border-radius: 2px
          border: 1px solid $color-col-line
          .item-img
            position: absolute
            width: 100%
            height: 100%
            left: 0
            top: 0
            border-radius: 2px
          .checked-img
            position: absolute
            width: 24px
            height: 24px
            left: 50%
            top: 50%
            transform: translate(-50%, -50%)
        .item:last-child
          margin-right: 0

</style>
